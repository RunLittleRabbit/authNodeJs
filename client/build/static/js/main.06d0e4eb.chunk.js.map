{"version":3,"sources":["config/api.js","pages/signIn/signIn.js","pages/signUp/signUp.js","components/header.js","pages/Products/products.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","useStyles","makeStyles","theme","paper","paddingTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","SignIn","props","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","initialValues","email","password","validate","values","errors","test","password2","onSubmit","actions","touched","handleChange","handleBlur","handleSubmit","isSubmitting","TextField","onChange","onBlur","value","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","color","disabled","onClick","axios","post","then","response","console","log","history","push","catch","error","data","message","userLogin","Grid","container","item","xs","to","SignUp","setSubmitting","setTimeout","createUser","justify","grow","flexGrow","root","marginLeft","menuButton","marginRight","title","breakpoints","up","search","position","borderRadius","shape","fade","common","white","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Header","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","event","currentTarget","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","InputBase","placeholder","input","inputProps","icon","heroContent","background","heroButtons","cardGrid","paddingBottom","card","cardMedia","cardContent","footer","cards","Products","Fragment","align","gutterBottom","paragraph","map","key","sm","md","Card","CardMedia","image","CardContent","CardActions","size","App","exact","path","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06d0e4eb.chunk.js","sourcesContent":["export const apiUrl = 'http://localhost:5000';","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from \"axios\";\nimport {apiUrl} from \"../../config/api\";\nimport {Formik} from \"formik\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        paddingTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = (props) => {\n    const classes = useStyles();\n\n    const userLogin = (values) => {\n        axios.post(`${apiUrl}/users/login`, values)\n            .then((response) => {\n                console.log(response);\n                props.history.push('/products')\n            })\n            .catch((error) => {\n                console.log(values);\n                console.error(error.response.data.message);\n                console.log(error);\n            });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Formik\n                    initialValues={{ email: '', password: '' }}\n                    validate={values => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                            errors.email = 'Invalid email address';\n                        }\n                        if(!values.password) {\n                            errors.password = 'Required';\n                        } else if (values.password !== values.password2) {\n                            errors.password = 'passwords not identical'\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, actions) => {\n                    }}\n                >\n                    {({\n                          values,\n                          errors,\n                          touched,\n                          handleChange,\n                          handleBlur,\n                          handleSubmit,\n                          isSubmitting,\n                          /* and other goodies */\n                      }) => (\n                        <form onSubmit={handleSubmit} className={classes.form}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.email}\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                            />\n                            {errors.email && touched.email && errors.email}\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.password}\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                            {errors.password && touched.password && errors.password}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={isSubmitting}\n                                className={classes.submit}\n                                onClick={() => userLogin(values)}\n                            >\n                                Sign In\n                            </Button>\n                            <Grid container>\n                                <Grid item xs>\n                                    <Link to=\"#\" variant=\"body2\">\n                                        Forgot password?\n                                    </Link>\n                                </Grid>\n                                <Grid item>\n                                    <Link to=\"signUp\" variant=\"body2\">\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        </Container>\n    );\n}\nexport default SignIn;","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { apiUrl } from \"../../config/api\";\nimport {Formik} from \"formik\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        paddingTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = (props) => {\n    const classes = useStyles();\n\n  const createUser = (values) => {\n        axios.post(`${apiUrl}/users/register`, values)\n            .then((response) => {\n                console.log(response);\n                props.history.push('/')\n            })\n            .catch((error) => {\n                console.error(error.response.data.message);\n            });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <Formik\n                    initialValues={{ name: '', email: '', password: '', password2: '' }}\n                    validate={values => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = 'Required';\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                            errors.email = 'Invalid email address';\n                        }\n                        if(!values.password) {\n                            errors.password = 'Required';\n                        } else if (values.password !== values.password2) {\n                            errors.password = 'passwords not identical'\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            setSubmitting(false);\n                        }, 400);\n                    }}\n                >\n                    {({\n                          values,\n                          errors,\n                          touched,\n                          handleChange,\n                          handleBlur,\n                          handleSubmit,\n                          isSubmitting,\n                          /* and other goodies */\n                      }) => (\n                        <form onSubmit={handleSubmit}>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        autoComplete=\"fname\"\n                                        name=\"name\"\n                                        type=\"name\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.name}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"name\"\n                                        label=\"Name\"\n                                        margin=\"normal\"\n                                        autoFocus\n                                    />\n                                    {errors.name && touched.name && errors.name}\n                                    <TextField\n                                        autoComplete=\"fname\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.email}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"email\"\n                                        label=\"Email\"\n                                        margin=\"normal\"\n                                        autoFocus\n                                    />\n                                    <TextField\n                                        autoComplete=\"fname\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"password\"\n                                        label=\"Password\"\n                                        margin=\"normal\"\n                                        autoFocus\n                                    />\n                                    <TextField\n                                        autoComplete=\"fname\"\n                                        name=\"password2\"\n                                        type=\"password\"\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.password2}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        id=\"password2\"\n                                        label=\"Repeat Password\"\n                                        margin=\"normal\"\n                                        autoFocus\n                                    />\n                                    {errors.email && touched.email && errors.email}\n                                </Grid>\n\n                            </Grid>\n                            {/*<input*/}\n                            {/*    type=\"password\"*/}\n                            {/*    name=\"password\"*/}\n                            {/*    onChange={handleChange}*/}\n                            {/*    onBlur={handleBlur}*/}\n                            {/*    value={values.password}*/}\n                            {/*/>*/}\n                            {/*{errors.password && touched.password && errors.password}*/}\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                disabled={isSubmitting}\n                                onClick={() => createUser(values)}\n                            >\n                                Sign Up\n                            </Button>\n                            <Grid container justify=\"flex-end\">\n                                <Grid item>\n                                    <Link to=\"/\">\n                                        Already have an account? Sign in\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n        </Container>\n    );\n}\n\nexport default SignUp;","import React, { useState } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {Link} from \"react-router-dom\";\n// import Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    root: {\n        '& > a': {\n            marginLeft: theme.spacing(2),\n            color: 'white',\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon />\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                        <Typography className={classes.root}>\n                            <Link to=\"/signUp\">Sign Up</Link>\n                            <Link to=\"/\">Sign In</Link>\n                        </Typography>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Products() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <main>\n                {/* Hero unit */}\n                <div className={classes.heroContent}>\n                    <Container maxWidth=\"sm\">\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Album layout\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                            Something short and leading about the collection below—its contents, the creator, etc.\n                            Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n                            entirely.\n                        </Typography>\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={2} justify=\"center\">\n                                <Grid item>\n                                    <Button variant=\"contained\" color=\"primary\">\n                                        Main call to action\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\">\n                                        Secondary action\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </Container>\n                </div>\n                <Container className={classes.cardGrid} maxWidth=\"md\">\n                    {/* End hero unit */}\n                    <Grid container spacing={4}>\n                        {cards.map((card) => (\n                            <Grid item key={card} xs={12} sm={6} md={4}>\n                                <Card className={classes.card}>\n                                    <CardMedia\n                                        className={classes.cardMedia}\n                                        image=\"https://source.unsplash.com/random\"\n                                        title=\"Image title\"\n                                    />\n                                    <CardContent className={classes.cardContent}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            Heading\n                                        </Typography>\n                                        <Typography>\n                                            This is a media card. You can use this section to describe the content.\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\" color=\"primary\">\n                                            View\n                                        </Button>\n                                        <Button size=\"small\" color=\"primary\">\n                                            Edit\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Container>\n            </main>\n            {/* Footer */}\n            <footer className={classes.footer}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    Footer\n                </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                    Something here to give the footer a purpose!\n                </Typography>\n            </footer>\n            {/* End footer */}\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport './App.css';\nimport SignIn from \"./pages/signIn/signIn\";\nimport SignUp from \"./pages/signUp/signUp\";\nimport Header from \"./components/header\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport Products from \"./pages/Products/products\";\n\nconst App = () => (\n    <div className=\"App\">\n      <main>\n          <Router>\n              <Header/>\n              <Switch>\n                  <Route exact path=\"/\" component={SignIn} />\n                  <Route path=\"/signUp\" component={SignUp} />\n                  <Route path=\"/products\" component={Products} />\n              </Switch>\n          </Router>\n      </main>\n    </div>\n  );\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}